import numpy as np 
X=np.array(([2,9],[1,5],[3,6]), dtype=float)
y=np.array(([92],[86],[89]), dtype=float)
X=X/np.amax(X,axis=0)
y=y/100

def sigmoid(x):
    return 1/(1+np.exp(-x))

def derivatives_sigmoid(x):
    return x*(1-x)
epoch=5
lr=0.5

inputlayer_neurons=2
hiddenlayer_neurons=3
output_neurons=1

wh=np.random.uniform(size=(inputlayer_neurons,hiddenlayer_neurons))
wout=np.random.uniform(size=(hiddenlayer_neurons,output_neurons))

for i in range(epoch):
    hlayer_sum=np.dot(X,wh)
    hlayer_act=sigmoid(hlayer_sum)
    output_sum=np.dot(hlayer_act,wout)
    output_act=sigmoid(output_sum)
    
    EO=y-output_act
    outgrad=derivatives_sigmoid(output_act)
    d_output=EO*outgrad
    EH=d_output.dot(wout.T)
    hiddengrad=derivatives_sigmoid(hlayer_act)
    d_hiddenlayer=EH*hiddengrad
    
    wout+=hlayer_act.T.dot(d_output)*lr
    wh+=X.T.dot(d_hiddenlayer)*lr
    
    print("----------EPOCH",i+1,"STARTS-----------")
    print("Input:\n" +str(X))
    print("Actual output:\n" +str(y))
    print("Pridicted output:\n",output_act) 
    print("---------------EPOCH",i+1,"Ends----------")

       
print("Input:\n" +str(X))
print("Actual output:\n" +str(y))
print("Pridicted output",output_act)